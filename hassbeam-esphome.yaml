# ESPHome Configuration for HassBeam IR Receiver
# Save this as hassbeam.yaml in your ESPHome directory

esphome:
  name: hassbeam
  friendly_name: HassBeam IR Receiver

# Choose your board type
esp32:
  board: esp32dev
  framework:
    type: arduino

# WiFi configuration
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "HassBeam Fallback Hotspot"
    password: "hassbeam123"

captive_portal:

# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key

# Enable Over-The-Air updates
ota:
  password: !secret ota_password

# Web server (optional, for debugging)
web_server:
  port: 80

# Status LED (optional)
status_led:
  pin: GPIO2

# IR Receiver configuration
remote_receiver:
  pin: GPIO14  # Change this to your IR receiver pin
  dump: all    # This will dump all received IR codes to the log
  idle: 10ms
  buffer_size: 10kb
  filter: 250us
  tolerance: 25%
  
  # This is the key event that the Home Assistant integration listens for
  on_remote_received:
    - homeassistant.event:
        event: esphome.hassbeam.ir_received
        data:
          protocol: !lambda 'return x.get_protocol();'
          data: !lambda 'return to_string(x.get_data());'
          command: !lambda 'return to_string(x.get_command());'
          address: !lambda 'return to_string(x.get_address());'
          raw_data: !lambda |-
            std::string raw_str = "";
            for (int i = 0; i < x.get_raw_data().size(); i++) {
              raw_str += to_string(x.get_raw_data()[i]);
              if (i < x.get_raw_data().size() - 1) raw_str += ",";
            }
            return raw_str;

# Optional: Add a button to manually test the connection
button:
  - platform: template
    name: "Test Connection"
    on_press:
      - homeassistant.event:
          event: esphome.hassbeam.test
          data:
            message: "HassBeam is working!"

# Optional: Add sensors for monitoring
sensor:
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 60s
    
  - platform: uptime
    name: "Uptime"

text_sensor:
  - platform: version
    name: "ESPHome Version"
    
  - platform: wifi_info
    ip_address:
      name: "IP Address"
    ssid:
      name: "Connected SSID"
